/* tslint:disable */
/* eslint-disable */
/**
 * Nucleus | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface LoginRequest {
    returnUrl?: string;
}

export interface PostLoginRedirectRequest {
    returnUrl?: string;
}

/**
 * 
 */
export class AuthEndpointsApi extends runtime.BaseAPI {

    /**
     */
    async loginRaw(requestParameters: LoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters['returnUrl'] != null) {
            queryParameters['returnUrl'] = requestParameters['returnUrl'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/auth/discord/login`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async login(requestParameters: LoginRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.loginRaw(requestParameters, initOverrides);
    }

    /**
     */
    async postLoginRedirectRaw(requestParameters: PostLoginRedirectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters['returnUrl'] != null) {
            queryParameters['returnUrl'] = requestParameters['returnUrl'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/auth/post-login-redirect`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async postLoginRedirect(requestParameters: PostLoginRedirectRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postLoginRedirectRaw(requestParameters, initOverrides);
    }

}
